// automatically generated by clay-bindgen

alias curl_socklen_t = socklen_t;

alias curl_off_t = int64_t;

alias __curl_rule_01__ = Array[CChar, 1];

alias __curl_rule_02__ = Array[CChar, 1];

alias __curl_rule_03__ = Array[CChar, 1];

alias __curl_rule_04__ = Array[CChar, 1];

alias __curl_rule_05__ = Array[CChar, 1];

alias CURL = /* unknown kind Void */ Opaque;

alias curl_socket_t = Int;

record Struct_curl_httppost (
    next : Pointer[Struct_curl_httppost],
    name : Pointer[CChar],
    namelength : CLong,
    contents : Pointer[CChar],
    contentslength : CLong,
    buffer : Pointer[CChar],
    bufferlength : CLong,
    contenttype : Pointer[CChar],
    contentheader : Pointer[Struct_curl_slist],
    more : Pointer[Struct_curl_httppost],
    flags : CLong,
    showfilename : Pointer[CChar],
    userp : OpaquePointer,
);

alias curl_progress_callback = CCodePointer[[OpaquePointer, Double, Double, Double, Double],[Int]];

alias curl_write_callback = CCodePointer[[Pointer[CChar], size_t, size_t, OpaquePointer],[size_t]];


alias curlfiletype = UInt;
alias CURLFILETYPE_FILE = UInt(0);
alias CURLFILETYPE_DIRECTORY = UInt(1);
alias CURLFILETYPE_SYMLINK = UInt(2);
alias CURLFILETYPE_DEVICE_BLOCK = UInt(3);
alias CURLFILETYPE_DEVICE_CHAR = UInt(4);
alias CURLFILETYPE_NAMEDPIPE = UInt(5);
alias CURLFILETYPE_SOCKET = UInt(6);
alias CURLFILETYPE_DOOR = UInt(7);
alias CURLFILETYPE_UNKNOWN = UInt(8);

record Struct_curl_fileinfo (
    filename : Pointer[CChar],
    filetype : curlfiletype,
    time : time_t,
    perm : UInt,
    uid : Int,
    gid : Int,
    size : curl_off_t,
    hardlinks : CLong,
    strings : Struct_Unnamed1,
    flags : UInt,
    b_data : Pointer[CChar],
    b_size : size_t,
    b_used : size_t,
);

alias curl_chunk_bgn_callback = CCodePointer[[OpaquePointer, OpaquePointer, Int],[CLong]];

alias curl_chunk_end_callback = CCodePointer[[OpaquePointer],[CLong]];

alias curl_fnmatch_callback = CCodePointer[[OpaquePointer, Pointer[CChar], Pointer[CChar]],[Int]];

alias curl_seek_callback = CCodePointer[[OpaquePointer, curl_off_t, Int],[Int]];

alias curl_read_callback = CCodePointer[[Pointer[CChar], size_t, size_t, OpaquePointer],[size_t]];


alias curlsocktype = UInt;
alias CURLSOCKTYPE_IPCXN = UInt(0);
alias CURLSOCKTYPE_LAST = UInt(1);

alias curl_sockopt_callback = CCodePointer[[OpaquePointer, curl_socket_t, curlsocktype],[Int]];

record Struct_curl_sockaddr (
    family : Int,
    socktype : Int,
    protocol : Int,
    addrlen : UInt,
    addr : Struct_sockaddr,
);

alias curl_opensocket_callback = CCodePointer[[OpaquePointer, curlsocktype, Pointer[Struct_curl_sockaddr]],[curl_socket_t]];

alias curl_closesocket_callback = CCodePointer[[OpaquePointer, curl_socket_t],[Int]];


alias curlioerr = UInt;
alias CURLIOE_OK = UInt(0);
alias CURLIOE_UNKNOWNCMD = UInt(1);
alias CURLIOE_FAILRESTART = UInt(2);
alias CURLIOE_LAST = UInt(3);


alias curliocmd = UInt;
alias CURLIOCMD_NOP = UInt(0);
alias CURLIOCMD_RESTARTREAD = UInt(1);
alias CURLIOCMD_LAST = UInt(2);

alias curl_ioctl_callback = CCodePointer[[Pointer[CURL], Int, OpaquePointer],[curlioerr]];

alias curl_malloc_callback = CCodePointer[[size_t],[OpaquePointer]];

alias curl_free_callback = CCodePointer[[OpaquePointer],[]];

alias curl_realloc_callback = CCodePointer[[OpaquePointer, size_t],[OpaquePointer]];

alias curl_strdup_callback = CCodePointer[[Pointer[CChar]],[Pointer[CChar]]];

alias curl_calloc_callback = CCodePointer[[size_t, size_t],[OpaquePointer]];


alias curl_infotype = UInt;
alias CURLINFO_TEXT = UInt(0);
alias CURLINFO_HEADER_IN = UInt(1);
alias CURLINFO_HEADER_OUT = UInt(2);
alias CURLINFO_DATA_IN = UInt(3);
alias CURLINFO_DATA_OUT = UInt(4);
alias CURLINFO_SSL_DATA_IN = UInt(5);
alias CURLINFO_SSL_DATA_OUT = UInt(6);
alias CURLINFO_END = UInt(7);

alias curl_debug_callback = CCodePointer[[Pointer[CURL], curl_infotype, Pointer[CChar], size_t, OpaquePointer],[Int]];


alias CURLcode = UInt;
alias CURLE_OK = UInt(0);
alias CURLE_UNSUPPORTED_PROTOCOL = UInt(1);
alias CURLE_FAILED_INIT = UInt(2);
alias CURLE_URL_MALFORMAT = UInt(3);
alias CURLE_NOT_BUILT_IN = UInt(4);
alias CURLE_COULDNT_RESOLVE_PROXY = UInt(5);
alias CURLE_COULDNT_RESOLVE_HOST = UInt(6);
alias CURLE_COULDNT_CONNECT = UInt(7);
alias CURLE_FTP_WEIRD_SERVER_REPLY = UInt(8);
alias CURLE_REMOTE_ACCESS_DENIED = UInt(9);
alias CURLE_FTP_ACCEPT_FAILED = UInt(10);
alias CURLE_FTP_WEIRD_PASS_REPLY = UInt(11);
alias CURLE_FTP_ACCEPT_TIMEOUT = UInt(12);
alias CURLE_FTP_WEIRD_PASV_REPLY = UInt(13);
alias CURLE_FTP_WEIRD_227_FORMAT = UInt(14);
alias CURLE_FTP_CANT_GET_HOST = UInt(15);
alias CURLE_OBSOLETE16 = UInt(16);
alias CURLE_FTP_COULDNT_SET_TYPE = UInt(17);
alias CURLE_PARTIAL_FILE = UInt(18);
alias CURLE_FTP_COULDNT_RETR_FILE = UInt(19);
alias CURLE_OBSOLETE20 = UInt(20);
alias CURLE_QUOTE_ERROR = UInt(21);
alias CURLE_HTTP_RETURNED_ERROR = UInt(22);
alias CURLE_WRITE_ERROR = UInt(23);
alias CURLE_OBSOLETE24 = UInt(24);
alias CURLE_UPLOAD_FAILED = UInt(25);
alias CURLE_READ_ERROR = UInt(26);
alias CURLE_OUT_OF_MEMORY = UInt(27);
alias CURLE_OPERATION_TIMEDOUT = UInt(28);
alias CURLE_OBSOLETE29 = UInt(29);
alias CURLE_FTP_PORT_FAILED = UInt(30);
alias CURLE_FTP_COULDNT_USE_REST = UInt(31);
alias CURLE_OBSOLETE32 = UInt(32);
alias CURLE_RANGE_ERROR = UInt(33);
alias CURLE_HTTP_POST_ERROR = UInt(34);
alias CURLE_SSL_CONNECT_ERROR = UInt(35);
alias CURLE_BAD_DOWNLOAD_RESUME = UInt(36);
alias CURLE_FILE_COULDNT_READ_FILE = UInt(37);
alias CURLE_LDAP_CANNOT_BIND = UInt(38);
alias CURLE_LDAP_SEARCH_FAILED = UInt(39);
alias CURLE_OBSOLETE40 = UInt(40);
alias CURLE_FUNCTION_NOT_FOUND = UInt(41);
alias CURLE_ABORTED_BY_CALLBACK = UInt(42);
alias CURLE_BAD_FUNCTION_ARGUMENT = UInt(43);
alias CURLE_OBSOLETE44 = UInt(44);
alias CURLE_INTERFACE_FAILED = UInt(45);
alias CURLE_OBSOLETE46 = UInt(46);
alias CURLE_TOO_MANY_REDIRECTS = UInt(47);
alias CURLE_UNKNOWN_OPTION = UInt(48);
alias CURLE_TELNET_OPTION_SYNTAX = UInt(49);
alias CURLE_OBSOLETE50 = UInt(50);
alias CURLE_PEER_FAILED_VERIFICATION = UInt(51);
alias CURLE_GOT_NOTHING = UInt(52);
alias CURLE_SSL_ENGINE_NOTFOUND = UInt(53);
alias CURLE_SSL_ENGINE_SETFAILED = UInt(54);
alias CURLE_SEND_ERROR = UInt(55);
alias CURLE_RECV_ERROR = UInt(56);
alias CURLE_OBSOLETE57 = UInt(57);
alias CURLE_SSL_CERTPROBLEM = UInt(58);
alias CURLE_SSL_CIPHER = UInt(59);
alias CURLE_SSL_CACERT = UInt(60);
alias CURLE_BAD_CONTENT_ENCODING = UInt(61);
alias CURLE_LDAP_INVALID_URL = UInt(62);
alias CURLE_FILESIZE_EXCEEDED = UInt(63);
alias CURLE_USE_SSL_FAILED = UInt(64);
alias CURLE_SEND_FAIL_REWIND = UInt(65);
alias CURLE_SSL_ENGINE_INITFAILED = UInt(66);
alias CURLE_LOGIN_DENIED = UInt(67);
alias CURLE_TFTP_NOTFOUND = UInt(68);
alias CURLE_TFTP_PERM = UInt(69);
alias CURLE_REMOTE_DISK_FULL = UInt(70);
alias CURLE_TFTP_ILLEGAL = UInt(71);
alias CURLE_TFTP_UNKNOWNID = UInt(72);
alias CURLE_REMOTE_FILE_EXISTS = UInt(73);
alias CURLE_TFTP_NOSUCHUSER = UInt(74);
alias CURLE_CONV_FAILED = UInt(75);
alias CURLE_CONV_REQD = UInt(76);
alias CURLE_SSL_CACERT_BADFILE = UInt(77);
alias CURLE_REMOTE_FILE_NOT_FOUND = UInt(78);
alias CURLE_SSH = UInt(79);
alias CURLE_SSL_SHUTDOWN_FAILED = UInt(80);
alias CURLE_AGAIN = UInt(81);
alias CURLE_SSL_CRL_BADFILE = UInt(82);
alias CURLE_SSL_ISSUER_ERROR = UInt(83);
alias CURLE_FTP_PRET_FAILED = UInt(84);
alias CURLE_RTSP_CSEQ_ERROR = UInt(85);
alias CURLE_RTSP_SESSION_ERROR = UInt(86);
alias CURLE_FTP_BAD_FILE_LIST = UInt(87);
alias CURLE_CHUNK_FAILED = UInt(88);
alias CURL_LAST = UInt(89);

alias curl_conv_callback = CCodePointer[[Pointer[CChar], size_t],[CURLcode]];

alias curl_ssl_ctx_callback = CCodePointer[[Pointer[CURL], OpaquePointer, OpaquePointer],[CURLcode]];


alias curl_proxytype = UInt;
alias CURLPROXY_HTTP = UInt(0);
alias CURLPROXY_HTTP_1_0 = UInt(1);
alias CURLPROXY_SOCKS4 = UInt(4);
alias CURLPROXY_SOCKS5 = UInt(5);
alias CURLPROXY_SOCKS4A = UInt(6);
alias CURLPROXY_SOCKS5_HOSTNAME = UInt(7);

record Struct_curl_khkey (
    key : Pointer[CChar],
    len : size_t,
    keytype : Enum_type,
);

alias Enum_type = UInt;
alias CURLKHTYPE_UNKNOWN = UInt(0);
alias CURLKHTYPE_RSA1 = UInt(1);
alias CURLKHTYPE_RSA = UInt(2);
alias CURLKHTYPE_DSS = UInt(3);

alias Enum_curl_khstat = UInt;
alias CURLKHSTAT_FINE_ADD_TO_FILE = UInt(0);
alias CURLKHSTAT_FINE = UInt(1);
alias CURLKHSTAT_REJECT = UInt(2);
alias CURLKHSTAT_DEFER = UInt(3);
alias CURLKHSTAT_LAST = UInt(4);

alias Enum_curl_khmatch = UInt;
alias CURLKHMATCH_OK = UInt(0);
alias CURLKHMATCH_MISMATCH = UInt(1);
alias CURLKHMATCH_MISSING = UInt(2);
alias CURLKHMATCH_LAST = UInt(3);

alias curl_sshkeycallback = CCodePointer[[Pointer[CURL], Pointer[Struct_curl_khkey], Pointer[Struct_curl_khkey], Enum_curl_khmatch, OpaquePointer],[Int]];


alias curl_usessl = UInt;
alias CURLUSESSL_NONE = UInt(0);
alias CURLUSESSL_TRY = UInt(1);
alias CURLUSESSL_CONTROL = UInt(2);
alias CURLUSESSL_ALL = UInt(3);
alias CURLUSESSL_LAST = UInt(4);


alias curl_ftpccc = UInt;
alias CURLFTPSSL_CCC_NONE = UInt(0);
alias CURLFTPSSL_CCC_PASSIVE = UInt(1);
alias CURLFTPSSL_CCC_ACTIVE = UInt(2);
alias CURLFTPSSL_CCC_LAST = UInt(3);


alias curl_ftpauth = UInt;
alias CURLFTPAUTH_DEFAULT = UInt(0);
alias CURLFTPAUTH_SSL = UInt(1);
alias CURLFTPAUTH_TLS = UInt(2);
alias CURLFTPAUTH_LAST = UInt(3);


alias curl_ftpcreatedir = UInt;
alias CURLFTP_CREATE_DIR_NONE = UInt(0);
alias CURLFTP_CREATE_DIR = UInt(1);
alias CURLFTP_CREATE_DIR_RETRY = UInt(2);
alias CURLFTP_CREATE_DIR_LAST = UInt(3);


alias curl_ftpmethod = UInt;
alias CURLFTPMETHOD_DEFAULT = UInt(0);
alias CURLFTPMETHOD_MULTICWD = UInt(1);
alias CURLFTPMETHOD_NOCWD = UInt(2);
alias CURLFTPMETHOD_SINGLECWD = UInt(3);
alias CURLFTPMETHOD_LAST = UInt(4);


alias CURLoption = UInt;
alias CURLOPT_FILE = UInt(10001);
alias CURLOPT_URL = UInt(10002);
alias CURLOPT_PORT = UInt(3);
alias CURLOPT_PROXY = UInt(10004);
alias CURLOPT_USERPWD = UInt(10005);
alias CURLOPT_PROXYUSERPWD = UInt(10006);
alias CURLOPT_RANGE = UInt(10007);
alias CURLOPT_INFILE = UInt(10009);
alias CURLOPT_ERRORBUFFER = UInt(10010);
alias CURLOPT_WRITEFUNCTION = UInt(20011);
alias CURLOPT_READFUNCTION = UInt(20012);
alias CURLOPT_TIMEOUT = UInt(13);
alias CURLOPT_INFILESIZE = UInt(14);
alias CURLOPT_POSTFIELDS = UInt(10015);
alias CURLOPT_REFERER = UInt(10016);
alias CURLOPT_FTPPORT = UInt(10017);
alias CURLOPT_USERAGENT = UInt(10018);
alias CURLOPT_LOW_SPEED_LIMIT = UInt(19);
alias CURLOPT_LOW_SPEED_TIME = UInt(20);
alias CURLOPT_RESUME_FROM = UInt(21);
alias CURLOPT_COOKIE = UInt(10022);
alias CURLOPT_HTTPHEADER = UInt(10023);
alias CURLOPT_HTTPPOST = UInt(10024);
alias CURLOPT_SSLCERT = UInt(10025);
alias CURLOPT_KEYPASSWD = UInt(10026);
alias CURLOPT_CRLF = UInt(27);
alias CURLOPT_QUOTE = UInt(10028);
alias CURLOPT_WRITEHEADER = UInt(10029);
alias CURLOPT_COOKIEFILE = UInt(10031);
alias CURLOPT_SSLVERSION = UInt(32);
alias CURLOPT_TIMECONDITION = UInt(33);
alias CURLOPT_TIMEVALUE = UInt(34);
alias CURLOPT_CUSTOMREQUEST = UInt(10036);
alias CURLOPT_STDERR = UInt(10037);
alias CURLOPT_POSTQUOTE = UInt(10039);
alias CURLOPT_WRITEINFO = UInt(10040);
alias CURLOPT_VERBOSE = UInt(41);
alias CURLOPT_HEADER = UInt(42);
alias CURLOPT_NOPROGRESS = UInt(43);
alias CURLOPT_NOBODY = UInt(44);
alias CURLOPT_FAILONERROR = UInt(45);
alias CURLOPT_UPLOAD = UInt(46);
alias CURLOPT_POST = UInt(47);
alias CURLOPT_DIRLISTONLY = UInt(48);
alias CURLOPT_APPEND = UInt(50);
alias CURLOPT_NETRC = UInt(51);
alias CURLOPT_FOLLOWLOCATION = UInt(52);
alias CURLOPT_TRANSFERTEXT = UInt(53);
alias CURLOPT_PUT = UInt(54);
alias CURLOPT_PROGRESSFUNCTION = UInt(20056);
alias CURLOPT_PROGRESSDATA = UInt(10057);
alias CURLOPT_AUTOREFERER = UInt(58);
alias CURLOPT_PROXYPORT = UInt(59);
alias CURLOPT_POSTFIELDSIZE = UInt(60);
alias CURLOPT_HTTPPROXYTUNNEL = UInt(61);
alias CURLOPT_INTERFACE = UInt(10062);
alias CURLOPT_KRBLEVEL = UInt(10063);
alias CURLOPT_SSL_VERIFYPEER = UInt(64);
alias CURLOPT_CAINFO = UInt(10065);
alias CURLOPT_MAXREDIRS = UInt(68);
alias CURLOPT_FILETIME = UInt(69);
alias CURLOPT_TELNETOPTIONS = UInt(10070);
alias CURLOPT_MAXCONNECTS = UInt(71);
alias CURLOPT_CLOSEPOLICY = UInt(72);
alias CURLOPT_FRESH_CONNECT = UInt(74);
alias CURLOPT_FORBID_REUSE = UInt(75);
alias CURLOPT_RANDOM_FILE = UInt(10076);
alias CURLOPT_EGDSOCKET = UInt(10077);
alias CURLOPT_CONNECTTIMEOUT = UInt(78);
alias CURLOPT_HEADERFUNCTION = UInt(20079);
alias CURLOPT_HTTPGET = UInt(80);
alias CURLOPT_SSL_VERIFYHOST = UInt(81);
alias CURLOPT_COOKIEJAR = UInt(10082);
alias CURLOPT_SSL_CIPHER_LIST = UInt(10083);
alias CURLOPT_HTTP_VERSION = UInt(84);
alias CURLOPT_FTP_USE_EPSV = UInt(85);
alias CURLOPT_SSLCERTTYPE = UInt(10086);
alias CURLOPT_SSLKEY = UInt(10087);
alias CURLOPT_SSLKEYTYPE = UInt(10088);
alias CURLOPT_SSLENGINE = UInt(10089);
alias CURLOPT_SSLENGINE_DEFAULT = UInt(90);
alias CURLOPT_DNS_USE_GLOBAL_CACHE = UInt(91);
alias CURLOPT_DNS_CACHE_TIMEOUT = UInt(92);
alias CURLOPT_PREQUOTE = UInt(10093);
alias CURLOPT_DEBUGFUNCTION = UInt(20094);
alias CURLOPT_DEBUGDATA = UInt(10095);
alias CURLOPT_COOKIESESSION = UInt(96);
alias CURLOPT_CAPATH = UInt(10097);
alias CURLOPT_BUFFERSIZE = UInt(98);
alias CURLOPT_NOSIGNAL = UInt(99);
alias CURLOPT_SHARE = UInt(10100);
alias CURLOPT_PROXYTYPE = UInt(101);
alias CURLOPT_ACCEPT_ENCODING = UInt(10102);
alias CURLOPT_PRIVATE = UInt(10103);
alias CURLOPT_HTTP200ALIASES = UInt(10104);
alias CURLOPT_UNRESTRICTED_AUTH = UInt(105);
alias CURLOPT_FTP_USE_EPRT = UInt(106);
alias CURLOPT_HTTPAUTH = UInt(107);
alias CURLOPT_SSL_CTX_FUNCTION = UInt(20108);
alias CURLOPT_SSL_CTX_DATA = UInt(10109);
alias CURLOPT_FTP_CREATE_MISSING_DIRS = UInt(110);
alias CURLOPT_PROXYAUTH = UInt(111);
alias CURLOPT_FTP_RESPONSE_TIMEOUT = UInt(112);
alias CURLOPT_IPRESOLVE = UInt(113);
alias CURLOPT_MAXFILESIZE = UInt(114);
alias CURLOPT_INFILESIZE_LARGE = UInt(30115);
alias CURLOPT_RESUME_FROM_LARGE = UInt(30116);
alias CURLOPT_MAXFILESIZE_LARGE = UInt(30117);
alias CURLOPT_NETRC_FILE = UInt(10118);
alias CURLOPT_USE_SSL = UInt(119);
alias CURLOPT_POSTFIELDSIZE_LARGE = UInt(30120);
alias CURLOPT_TCP_NODELAY = UInt(121);
alias CURLOPT_FTPSSLAUTH = UInt(129);
alias CURLOPT_IOCTLFUNCTION = UInt(20130);
alias CURLOPT_IOCTLDATA = UInt(10131);
alias CURLOPT_FTP_ACCOUNT = UInt(10134);
alias CURLOPT_COOKIELIST = UInt(10135);
alias CURLOPT_IGNORE_CONTENT_LENGTH = UInt(136);
alias CURLOPT_FTP_SKIP_PASV_IP = UInt(137);
alias CURLOPT_FTP_FILEMETHOD = UInt(138);
alias CURLOPT_LOCALPORT = UInt(139);
alias CURLOPT_LOCALPORTRANGE = UInt(140);
alias CURLOPT_CONNECT_ONLY = UInt(141);
alias CURLOPT_CONV_FROM_NETWORK_FUNCTION = UInt(20142);
alias CURLOPT_CONV_TO_NETWORK_FUNCTION = UInt(20143);
alias CURLOPT_CONV_FROM_UTF8_FUNCTION = UInt(20144);
alias CURLOPT_MAX_SEND_SPEED_LARGE = UInt(30145);
alias CURLOPT_MAX_RECV_SPEED_LARGE = UInt(30146);
alias CURLOPT_FTP_ALTERNATIVE_TO_USER = UInt(10147);
alias CURLOPT_SOCKOPTFUNCTION = UInt(20148);
alias CURLOPT_SOCKOPTDATA = UInt(10149);
alias CURLOPT_SSL_SESSIONID_CACHE = UInt(150);
alias CURLOPT_SSH_AUTH_TYPES = UInt(151);
alias CURLOPT_SSH_PUBLIC_KEYFILE = UInt(10152);
alias CURLOPT_SSH_PRIVATE_KEYFILE = UInt(10153);
alias CURLOPT_FTP_SSL_CCC = UInt(154);
alias CURLOPT_TIMEOUT_MS = UInt(155);
alias CURLOPT_CONNECTTIMEOUT_MS = UInt(156);
alias CURLOPT_HTTP_TRANSFER_DECODING = UInt(157);
alias CURLOPT_HTTP_CONTENT_DECODING = UInt(158);
alias CURLOPT_NEW_FILE_PERMS = UInt(159);
alias CURLOPT_NEW_DIRECTORY_PERMS = UInt(160);
alias CURLOPT_POSTREDIR = UInt(161);
alias CURLOPT_SSH_HOST_PUBLIC_KEY_MD5 = UInt(10162);
alias CURLOPT_OPENSOCKETFUNCTION = UInt(20163);
alias CURLOPT_OPENSOCKETDATA = UInt(10164);
alias CURLOPT_COPYPOSTFIELDS = UInt(10165);
alias CURLOPT_PROXY_TRANSFER_MODE = UInt(166);
alias CURLOPT_SEEKFUNCTION = UInt(20167);
alias CURLOPT_SEEKDATA = UInt(10168);
alias CURLOPT_CRLFILE = UInt(10169);
alias CURLOPT_ISSUERCERT = UInt(10170);
alias CURLOPT_ADDRESS_SCOPE = UInt(171);
alias CURLOPT_CERTINFO = UInt(172);
alias CURLOPT_USERNAME = UInt(10173);
alias CURLOPT_PASSWORD = UInt(10174);
alias CURLOPT_PROXYUSERNAME = UInt(10175);
alias CURLOPT_PROXYPASSWORD = UInt(10176);
alias CURLOPT_NOPROXY = UInt(10177);
alias CURLOPT_TFTP_BLKSIZE = UInt(178);
alias CURLOPT_SOCKS5_GSSAPI_SERVICE = UInt(10179);
alias CURLOPT_SOCKS5_GSSAPI_NEC = UInt(180);
alias CURLOPT_PROTOCOLS = UInt(181);
alias CURLOPT_REDIR_PROTOCOLS = UInt(182);
alias CURLOPT_SSH_KNOWNHOSTS = UInt(10183);
alias CURLOPT_SSH_KEYFUNCTION = UInt(20184);
alias CURLOPT_SSH_KEYDATA = UInt(10185);
alias CURLOPT_MAIL_FROM = UInt(10186);
alias CURLOPT_MAIL_RCPT = UInt(10187);
alias CURLOPT_FTP_USE_PRET = UInt(188);
alias CURLOPT_RTSP_REQUEST = UInt(189);
alias CURLOPT_RTSP_SESSION_ID = UInt(10190);
alias CURLOPT_RTSP_STREAM_URI = UInt(10191);
alias CURLOPT_RTSP_TRANSPORT = UInt(10192);
alias CURLOPT_RTSP_CLIENT_CSEQ = UInt(193);
alias CURLOPT_RTSP_SERVER_CSEQ = UInt(194);
alias CURLOPT_INTERLEAVEDATA = UInt(10195);
alias CURLOPT_INTERLEAVEFUNCTION = UInt(20196);
alias CURLOPT_WILDCARDMATCH = UInt(197);
alias CURLOPT_CHUNK_BGN_FUNCTION = UInt(20198);
alias CURLOPT_CHUNK_END_FUNCTION = UInt(20199);
alias CURLOPT_FNMATCH_FUNCTION = UInt(20200);
alias CURLOPT_CHUNK_DATA = UInt(10201);
alias CURLOPT_FNMATCH_DATA = UInt(10202);
alias CURLOPT_RESOLVE = UInt(10203);
alias CURLOPT_TLSAUTH_USERNAME = UInt(10204);
alias CURLOPT_TLSAUTH_PASSWORD = UInt(10205);
alias CURLOPT_TLSAUTH_TYPE = UInt(10206);
alias CURLOPT_TRANSFER_ENCODING = UInt(207);
alias CURLOPT_CLOSESOCKETFUNCTION = UInt(20208);
alias CURLOPT_CLOSESOCKETDATA = UInt(10209);
alias CURLOPT_GSSAPI_DELEGATION = UInt(210);
alias CURLOPT_DNS_SERVERS = UInt(10211);
alias CURLOPT_ACCEPTTIMEOUT_MS = UInt(212);
alias CURLOPT_LASTENTRY = UInt(213);



alias Enum_CURL_NETRC_OPTION = UInt;
alias CURL_NETRC_IGNORED = UInt(0);
alias CURL_NETRC_OPTIONAL = UInt(1);
alias CURL_NETRC_REQUIRED = UInt(2);
alias CURL_NETRC_LAST = UInt(3);


alias Enum_CURL_TLSAUTH = UInt;
alias CURL_TLSAUTH_NONE = UInt(0);
alias CURL_TLSAUTH_SRP = UInt(1);
alias CURL_TLSAUTH_LAST = UInt(2);


alias curl_TimeCond = UInt;
alias CURL_TIMECOND_NONE = UInt(0);
alias CURL_TIMECOND_IFMODSINCE = UInt(1);
alias CURL_TIMECOND_IFUNMODSINCE = UInt(2);
alias CURL_TIMECOND_LASTMOD = UInt(3);
alias CURL_TIMECOND_LAST = UInt(4);

external (cdecl) curl_strequal(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Int;

external (cdecl) curl_strnequal(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : Int;


alias CURLformoption = UInt;
alias CURLFORM_NOTHING = UInt(0);
alias CURLFORM_COPYNAME = UInt(1);
alias CURLFORM_PTRNAME = UInt(2);
alias CURLFORM_NAMELENGTH = UInt(3);
alias CURLFORM_COPYCONTENTS = UInt(4);
alias CURLFORM_PTRCONTENTS = UInt(5);
alias CURLFORM_CONTENTSLENGTH = UInt(6);
alias CURLFORM_FILECONTENT = UInt(7);
alias CURLFORM_ARRAY = UInt(8);
alias CURLFORM_OBSOLETE = UInt(9);
alias CURLFORM_FILE = UInt(10);
alias CURLFORM_BUFFER = UInt(11);
alias CURLFORM_BUFFERPTR = UInt(12);
alias CURLFORM_BUFFERLENGTH = UInt(13);
alias CURLFORM_CONTENTTYPE = UInt(14);
alias CURLFORM_CONTENTHEADER = UInt(15);
alias CURLFORM_FILENAME = UInt(16);
alias CURLFORM_END = UInt(17);
alias CURLFORM_OBSOLETE2 = UInt(18);
alias CURLFORM_STREAM = UInt(19);
alias CURLFORM_LASTENTRY = UInt(20);

record Struct_curl_forms (
    option : CURLformoption,
    value : Pointer[CChar],
);


alias CURLFORMcode = UInt;
alias CURL_FORMADD_OK = UInt(0);
alias CURL_FORMADD_MEMORY = UInt(1);
alias CURL_FORMADD_OPTION_TWICE = UInt(2);
alias CURL_FORMADD_NULL = UInt(3);
alias CURL_FORMADD_UNKNOWN_OPTION = UInt(4);
alias CURL_FORMADD_INCOMPLETE = UInt(5);
alias CURL_FORMADD_ILLEGAL_ARRAY = UInt(6);
alias CURL_FORMADD_DISABLED = UInt(7);
alias CURL_FORMADD_LAST = UInt(8);

external (cdecl) curl_formadd(arg0:Pointer[Pointer[Struct_curl_httppost]], arg1:Pointer[Pointer[Struct_curl_httppost]], ..) : CURLFORMcode;

alias curl_formget_callback = CCodePointer[[OpaquePointer, Pointer[CChar], size_t],[size_t]];

external (cdecl) curl_formget(arg0:Pointer[Struct_curl_httppost], arg1:OpaquePointer, arg2:curl_formget_callback) : Int;

external (cdecl) curl_formfree(arg0:Pointer[Struct_curl_httppost]) : ;

external (cdecl) curl_getenv(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) curl_version() : Pointer[CChar];

external (cdecl) curl_easy_escape(arg0:Pointer[CURL], arg1:Pointer[CChar], arg2:Int) : Pointer[CChar];

external (cdecl) curl_escape(arg0:Pointer[CChar], arg1:Int) : Pointer[CChar];

external (cdecl) curl_easy_unescape(arg0:Pointer[CURL], arg1:Pointer[CChar], arg2:Int, arg3:Pointer[Int]) : Pointer[CChar];

external (cdecl) curl_unescape(arg0:Pointer[CChar], arg1:Int) : Pointer[CChar];

external (cdecl) curl_free(arg0:OpaquePointer) : ;

external (cdecl) curl_global_init(arg0:CLong) : CURLcode;

external (cdecl) curl_global_init_mem(arg0:CLong, arg1:curl_malloc_callback, arg2:curl_free_callback, arg3:curl_realloc_callback, arg4:curl_strdup_callback, arg5:curl_calloc_callback) : CURLcode;

external (cdecl) curl_global_cleanup() : ;

record Struct_curl_slist (
    data : Pointer[CChar],
    next : Pointer[Struct_curl_slist],
);

external (cdecl) curl_slist_append(arg0:Pointer[Struct_curl_slist], arg1:Pointer[CChar]) : Pointer[Struct_curl_slist];

external (cdecl) curl_slist_free_all(arg0:Pointer[Struct_curl_slist]) : ;

external (cdecl) curl_getdate(arg0:Pointer[CChar], arg1:Pointer[time_t]) : time_t;

record Struct_curl_certinfo (
    num_of_certs : Int,
    certinfo : Pointer[Pointer[Struct_curl_slist]],
);


alias CURLINFO = UInt;
alias CURLINFO_NONE = UInt(0);
alias CURLINFO_EFFECTIVE_URL = UInt(1048577);
alias CURLINFO_RESPONSE_CODE = UInt(2097154);
alias CURLINFO_TOTAL_TIME = UInt(3145731);
alias CURLINFO_NAMELOOKUP_TIME = UInt(3145732);
alias CURLINFO_CONNECT_TIME = UInt(3145733);
alias CURLINFO_PRETRANSFER_TIME = UInt(3145734);
alias CURLINFO_SIZE_UPLOAD = UInt(3145735);
alias CURLINFO_SIZE_DOWNLOAD = UInt(3145736);
alias CURLINFO_SPEED_DOWNLOAD = UInt(3145737);
alias CURLINFO_SPEED_UPLOAD = UInt(3145738);
alias CURLINFO_HEADER_SIZE = UInt(2097163);
alias CURLINFO_REQUEST_SIZE = UInt(2097164);
alias CURLINFO_SSL_VERIFYRESULT = UInt(2097165);
alias CURLINFO_FILETIME = UInt(2097166);
alias CURLINFO_CONTENT_LENGTH_DOWNLOAD = UInt(3145743);
alias CURLINFO_CONTENT_LENGTH_UPLOAD = UInt(3145744);
alias CURLINFO_STARTTRANSFER_TIME = UInt(3145745);
alias CURLINFO_CONTENT_TYPE = UInt(1048594);
alias CURLINFO_REDIRECT_TIME = UInt(3145747);
alias CURLINFO_REDIRECT_COUNT = UInt(2097172);
alias CURLINFO_PRIVATE = UInt(1048597);
alias CURLINFO_HTTP_CONNECTCODE = UInt(2097174);
alias CURLINFO_HTTPAUTH_AVAIL = UInt(2097175);
alias CURLINFO_PROXYAUTH_AVAIL = UInt(2097176);
alias CURLINFO_OS_ERRNO = UInt(2097177);
alias CURLINFO_NUM_CONNECTS = UInt(2097178);
alias CURLINFO_SSL_ENGINES = UInt(4194331);
alias CURLINFO_COOKIELIST = UInt(4194332);
alias CURLINFO_LASTSOCKET = UInt(2097181);
alias CURLINFO_FTP_ENTRY_PATH = UInt(1048606);
alias CURLINFO_REDIRECT_URL = UInt(1048607);
alias CURLINFO_PRIMARY_IP = UInt(1048608);
alias CURLINFO_APPCONNECT_TIME = UInt(3145761);
alias CURLINFO_CERTINFO = UInt(4194338);
alias CURLINFO_CONDITION_UNMET = UInt(2097187);
alias CURLINFO_RTSP_SESSION_ID = UInt(1048612);
alias CURLINFO_RTSP_CLIENT_CSEQ = UInt(2097189);
alias CURLINFO_RTSP_SERVER_CSEQ = UInt(2097190);
alias CURLINFO_RTSP_CSEQ_RECV = UInt(2097191);
alias CURLINFO_PRIMARY_PORT = UInt(2097192);
alias CURLINFO_LOCAL_IP = UInt(1048617);
alias CURLINFO_LOCAL_PORT = UInt(2097194);
alias CURLINFO_LASTONE = UInt(42);


alias curl_closepolicy = UInt;
alias CURLCLOSEPOLICY_NONE = UInt(0);
alias CURLCLOSEPOLICY_OLDEST = UInt(1);
alias CURLCLOSEPOLICY_LEAST_RECENTLY_USED = UInt(2);
alias CURLCLOSEPOLICY_LEAST_TRAFFIC = UInt(3);
alias CURLCLOSEPOLICY_SLOWEST = UInt(4);
alias CURLCLOSEPOLICY_CALLBACK = UInt(5);
alias CURLCLOSEPOLICY_LAST = UInt(6);


alias curl_lock_data = UInt;
alias CURL_LOCK_DATA_NONE = UInt(0);
alias CURL_LOCK_DATA_SHARE = UInt(1);
alias CURL_LOCK_DATA_COOKIE = UInt(2);
alias CURL_LOCK_DATA_DNS = UInt(3);
alias CURL_LOCK_DATA_SSL_SESSION = UInt(4);
alias CURL_LOCK_DATA_CONNECT = UInt(5);
alias CURL_LOCK_DATA_LAST = UInt(6);


alias curl_lock_access = UInt;
alias CURL_LOCK_ACCESS_NONE = UInt(0);
alias CURL_LOCK_ACCESS_SHARED = UInt(1);
alias CURL_LOCK_ACCESS_SINGLE = UInt(2);
alias CURL_LOCK_ACCESS_LAST = UInt(3);

alias curl_lock_function = CCodePointer[[Pointer[CURL], curl_lock_data, curl_lock_access, OpaquePointer],[]];

alias curl_unlock_function = CCodePointer[[Pointer[CURL], curl_lock_data, OpaquePointer],[]];

alias CURLSH = /* unknown kind Void */ Opaque;


alias CURLSHcode = UInt;
alias CURLSHE_OK = UInt(0);
alias CURLSHE_BAD_OPTION = UInt(1);
alias CURLSHE_IN_USE = UInt(2);
alias CURLSHE_INVALID = UInt(3);
alias CURLSHE_NOMEM = UInt(4);
alias CURLSHE_NOT_BUILT_IN = UInt(5);
alias CURLSHE_LAST = UInt(6);


alias CURLSHoption = UInt;
alias CURLSHOPT_NONE = UInt(0);
alias CURLSHOPT_SHARE = UInt(1);
alias CURLSHOPT_UNSHARE = UInt(2);
alias CURLSHOPT_LOCKFUNC = UInt(3);
alias CURLSHOPT_UNLOCKFUNC = UInt(4);
alias CURLSHOPT_USERDATA = UInt(5);
alias CURLSHOPT_LAST = UInt(6);

external (cdecl) curl_share_init() : Pointer[CURLSH];

external (cdecl) curl_share_setopt(arg0:Pointer[CURLSH], arg1:CURLSHoption, ..) : CURLSHcode;

external (cdecl) curl_share_cleanup(arg0:Pointer[CURLSH]) : CURLSHcode;


alias CURLversion = UInt;
alias CURLVERSION_FIRST = UInt(0);
alias CURLVERSION_SECOND = UInt(1);
alias CURLVERSION_THIRD = UInt(2);
alias CURLVERSION_FOURTH = UInt(3);
alias CURLVERSION_LAST = UInt(4);

record curl_version_info_data (
    age : CURLversion,
    version : Pointer[CChar],
    version_num : UInt,
    host : Pointer[CChar],
    features : Int,
    ssl_version : Pointer[CChar],
    ssl_version_num : CLong,
    libz_version : Pointer[CChar],
    protocols : Pointer[Pointer[CChar]],
    ares : Pointer[CChar],
    ares_num : Int,
    libidn : Pointer[CChar],
    iconv_ver_num : Int,
    libssh_version : Pointer[CChar],
);

external (cdecl) curl_version_info(arg0:CURLversion) : Pointer[curl_version_info_data];

external (cdecl) curl_easy_strerror(arg0:CURLcode) : Pointer[CChar];

external (cdecl) curl_share_strerror(arg0:CURLSHcode) : Pointer[CChar];

external (cdecl) curl_easy_pause(arg0:Pointer[CURL], arg1:Int) : CURLcode;

external (cdecl) curl_easy_init() : Pointer[CURL];

external (cdecl) curl_easy_setopt(arg0:Pointer[CURL], arg1:CURLoption, ..) : CURLcode;

external (cdecl) curl_easy_perform(arg0:Pointer[CURL]) : CURLcode;

external (cdecl) curl_easy_cleanup(arg0:Pointer[CURL]) : ;

external (cdecl) curl_easy_getinfo(arg0:Pointer[CURL], arg1:CURLINFO, ..) : CURLcode;

external (cdecl) curl_easy_duphandle(arg0:Pointer[CURL]) : Pointer[CURL];

external (cdecl) curl_easy_reset(arg0:Pointer[CURL]) : ;

external (cdecl) curl_easy_recv(arg0:Pointer[CURL], arg1:OpaquePointer, arg2:size_t, arg3:Pointer[size_t]) : CURLcode;

external (cdecl) curl_easy_send(arg0:Pointer[CURL], arg1:OpaquePointer, arg2:size_t, arg3:Pointer[size_t]) : CURLcode;

alias CURLM = /* unknown kind Void */ Opaque;


alias CURLMcode = Int;
alias CURLM_CALL_MULTI_PERFORM = Int(-1);
alias CURLM_OK = Int(0);
alias CURLM_BAD_HANDLE = Int(1);
alias CURLM_BAD_EASY_HANDLE = Int(2);
alias CURLM_OUT_OF_MEMORY = Int(3);
alias CURLM_INTERNAL_ERROR = Int(4);
alias CURLM_BAD_SOCKET = Int(5);
alias CURLM_UNKNOWN_OPTION = Int(6);
alias CURLM_LAST = Int(7);


alias CURLMSG = UInt;
alias CURLMSG_NONE = UInt(0);
alias CURLMSG_DONE = UInt(1);
alias CURLMSG_LAST = UInt(2);

record Struct_CURLMsg (
    msg : CURLMSG,
    easy_handle : Pointer[CURL],
    data : Union_Unnamed2,
);

alias CURLMsg = Struct_CURLMsg;

external (cdecl) curl_multi_init() : Pointer[CURLM];

external (cdecl) curl_multi_add_handle(arg0:Pointer[CURLM], arg1:Pointer[CURL]) : CURLMcode;

external (cdecl) curl_multi_remove_handle(arg0:Pointer[CURLM], arg1:Pointer[CURL]) : CURLMcode;

external (cdecl) curl_multi_fdset(arg0:Pointer[CURLM], arg1:Pointer[fd_set], arg2:Pointer[fd_set], arg3:Pointer[fd_set], arg4:Pointer[Int]) : CURLMcode;

external (cdecl) curl_multi_perform(arg0:Pointer[CURLM], arg1:Pointer[Int]) : CURLMcode;

external (cdecl) curl_multi_cleanup(arg0:Pointer[CURLM]) : CURLMcode;

external (cdecl) curl_multi_info_read(arg0:Pointer[CURLM], arg1:Pointer[Int]) : Pointer[CURLMsg];

external (cdecl) curl_multi_strerror(arg0:CURLMcode) : Pointer[CChar];

alias curl_socket_callback = CCodePointer[[Pointer[CURL], curl_socket_t, Int, OpaquePointer, OpaquePointer],[Int]];

alias curl_multi_timer_callback = CCodePointer[[Pointer[CURLM], CLong, OpaquePointer],[Int]];

external (cdecl) curl_multi_socket(arg0:Pointer[CURLM], arg1:curl_socket_t, arg2:Pointer[Int]) : CURLMcode;

external (cdecl) curl_multi_socket_action(arg0:Pointer[CURLM], arg1:curl_socket_t, arg2:Int, arg3:Pointer[Int]) : CURLMcode;

external (cdecl) curl_multi_socket_all(arg0:Pointer[CURLM], arg1:Pointer[Int]) : CURLMcode;

external (cdecl) curl_multi_timeout(arg0:Pointer[CURLM], arg1:Pointer[CLong]) : CURLMcode;


alias CURLMoption = UInt;
alias CURLMOPT_SOCKETFUNCTION = UInt(20001);
alias CURLMOPT_SOCKETDATA = UInt(10002);
alias CURLMOPT_PIPELINING = UInt(3);
alias CURLMOPT_TIMERFUNCTION = UInt(20004);
alias CURLMOPT_TIMERDATA = UInt(10005);
alias CURLMOPT_MAXCONNECTS = UInt(6);
alias CURLMOPT_LASTENTRY = UInt(7);

external (cdecl) curl_multi_setopt(arg0:Pointer[CURLM], arg1:CURLMoption, ..) : CURLMcode;

external (cdecl) curl_multi_assign(arg0:Pointer[CURLM], arg1:curl_socket_t, arg2:OpaquePointer) : CURLMcode;

alias Enum_Unnamed3 = UInt;
alias CURL_RTSPREQ_NONE = UInt(0);
alias CURL_RTSPREQ_OPTIONS = UInt(1);
alias CURL_RTSPREQ_DESCRIBE = UInt(2);
alias CURL_RTSPREQ_ANNOUNCE = UInt(3);
alias CURL_RTSPREQ_SETUP = UInt(4);
alias CURL_RTSPREQ_PLAY = UInt(5);
alias CURL_RTSPREQ_PAUSE = UInt(6);
alias CURL_RTSPREQ_TEARDOWN = UInt(7);
alias CURL_RTSPREQ_GET_PARAMETER = UInt(8);
alias CURL_RTSPREQ_SET_PARAMETER = UInt(9);
alias CURL_RTSPREQ_RECORD = UInt(10);
alias CURL_RTSPREQ_RECEIVE = UInt(11);
alias CURL_RTSPREQ_LAST = UInt(12);

alias Enum_Unnamed4 = UInt;
alias CURL_SSLVERSION_DEFAULT = UInt(0);
alias CURL_SSLVERSION_TLSv1 = UInt(1);
alias CURL_SSLVERSION_SSLv2 = UInt(2);
alias CURL_SSLVERSION_SSLv3 = UInt(3);
alias CURL_SSLVERSION_LAST = UInt(4);

alias Union_Unnamed2 = Union[
    /* whatever */ OpaquePointer,
    /* result */ CURLcode,
];

alias Enum_Unnamed5 = UInt;
alias CURL_HTTP_VERSION_NONE = UInt(0);
alias CURL_HTTP_VERSION_1_0 = UInt(1);
alias CURL_HTTP_VERSION_1_1 = UInt(2);
alias CURL_HTTP_VERSION_LAST = UInt(3);

record Struct_Unnamed1 (
    time : Pointer[CChar],
    perm : Pointer[CChar],
    user : Pointer[CChar],
    group : Pointer[CChar],
    target : Pointer[CChar],
);

